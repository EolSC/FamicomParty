.include "common_constants.inc"
; *****************
; Блок игровых констант
; разделенных на блоки по игровым
; подсистемам
; *****************

; **********************
; *  Работа с памятью  *
; **********************

; размер блока данных для чтения
DATA_BLOCK_SIZE = $10

; **********************
; *  Текстовый движок  *
; **********************

; метки начала и конца блока спрайтов дефолтного шрифта
.import LettersStart
.import LettersEnd

; Символ, обозначающий переход на новую строку в текстовом движке
NEWLINE = $A

; Максимальное количество напечатанных символов в строке текста
; текстовый движок печатает по 1 букве, при окончании вывода текущей строки
; движок увеличивает printed_text_length до MAX_TEXT_SIZE чтобы можно было 
; понять что вывод закончен и можно переходить к следующей строке
MAX_TEXT_SIZE = $FF

; Размер текстовой области в интро
TEXT_AREA_SIZE = $AF

; Символ, которым очищается текстовая область
EMPTY_SYMBOL = $20

LETTERS_START = LettersStart
LETTERS_END = LettersEnd

; Размер блока спрайтов дефолтного шрифта в блоках по 16 байт
LETTERS_SIZE = (LETTERS_END - LETTERS_START) / 16
; Смещене адресов спрайтов текста в PPU
; Выбрано именно таким чтобы код символа соответствовал номеру спрайта
TEXT_SPRITES_OFFSET_PPU = $210;
; Адрес с которого в память грузятся спрайты текста
; грузим c 
TEXT_SPRITES_ADDRESS_IN_PPU = PPU_BGR_TBL + TEXT_SPRITES_OFFSET_PPU

TEXT_SPRITES_END_IN_PPU = TEXT_SPRITES_ADDRESS_IN_PPU + LETTERS_SIZE * 16

TEXT_BOX_X		 = 4	; координаты текстовой области в интро
TEXT_BOX_Y_UPPER = 20

TEXT_COUNT = 5			; число строк в интро


